spring.application.name=api-gateway
server.port=${PORT:8080}
management.endpoints.web.exposure.include=health,info,prometheus
management.metrics.tags.application=${spring.application.name}
management.endpoint.prometheus.enabled=true
# Spring Cloud Gateway Configuration
# For Exemplars to work we need histogram buckets
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]


# Spring Cloud Gateway Configuration

eureka.client.serviceUrl.defaultZone= http://${EUREKA_SERVER:localhost}:${EUREKA_PORT:8045}/eureka/



spring.cloud.gateway.routes[0].id=${SERVER_ADD_SUBTRACT:math-add-subtract}
spring.cloud.gateway.routes[0].uri=http://${SERVER_ADD_SUBTRACT:math-add-subtract}
spring.cloud.gateway.routes[0].predicates[0]=Path=/add-subtract/**


spring.cloud.gateway.routes[1].id=${SERVER_DIVISION_MULTIPLICATION:math-division-multiplication}
spring.cloud.gateway.routes[1].uri=http://${SERVER_DIVISION_MULTIPLICATION:math-division-multiplication}
spring.cloud.gateway.routes[1].predicates[0]=Path=/division-multiplication/**

spring.cloud.gateway.reactive.discovery.enabled=true
spring.cloud.gateway.discovery.locator.enabled=true




authenthication.enabled=false
logging.level.org.springframework.web.HttpLogging=TRACE
logging.level.org.springframework.cloud.gateway=TRACE
